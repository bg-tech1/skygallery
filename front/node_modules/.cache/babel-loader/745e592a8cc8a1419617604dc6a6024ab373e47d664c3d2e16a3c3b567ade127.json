{"ast":null,"code":"var _jsxFileName = \"/Users/keigohibino/develop/Go/skyview/skyviewsharing/src/components/PhotoGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./PhotoGrid.css\";\nimport { FaHeart } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhotoGrid = ({\n  photos\n}) => {\n  _s();\n  const [likedPhotos, setLikedPhotos] = useState({});\n  const toggleLike = (photoId, url) => {\n    setLikedPhotos(prevLikedPhotos => ({\n      ...prevLikedPhotos,\n      [photoId]: prevLikedPhotos[photoId] ? {\n        ...prevLikedPhotos[photoId],\n        liked: !prevLikedPhotos[photoId].liked\n      } : {\n        url,\n        liked: true\n      }\n    }));\n  };\n  useEffect(() => {\n    const saveInterval = setInterval(() => {\n      saveLikedPhotosStatus();\n      console.log(likedPhotos);\n    }, 5000); // 5秒ごとに保存\n\n    return () => clearInterval(saveInterval);\n  }, []);\n  const saveLikedPhotosStatus = async () => {\n    const username = \"test\";\n    const photosArray = Object.entries(likedPhotos).map(([photoId, data]) => ({\n      photoId,\n      url: data.url,\n      liked: data.liked\n    }));\n    // const requestBody = JSON.stringify({\n    //     username,\n    //     likedPhotoStatus: photosArray\n    // })\n    try {\n      const response = await axios.post(\"http://localhost:8080/registerPhoto\", {\n        username,\n        likedPhotoStatus: photosArray\n      });\n    } catch (error) {\n      console.error(\"CannotRegisterLikedPhoto\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photo-grid\",\n    children: photos.map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo.urls.regular\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `like-icon ${likedPhotos[photo.id] ? \"liked\" : \"\"}`,\n        onClick: () => toggleLike(photo.id, photo.urls.regular),\n        children: /*#__PURE__*/_jsxDEV(FaHeart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, photo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(PhotoGrid, \"fMqq6UCZEIZ3tC4jVOKdDyzHPiM=\");\n_c = PhotoGrid;\nexport default PhotoGrid;\nvar _c;\n$RefreshReg$(_c, \"PhotoGrid\");","map":{"version":3,"names":["React","useEffect","useState","FaHeart","axios","jsxDEV","_jsxDEV","PhotoGrid","photos","_s","likedPhotos","setLikedPhotos","toggleLike","photoId","url","prevLikedPhotos","liked","saveInterval","setInterval","saveLikedPhotosStatus","console","log","clearInterval","username","photosArray","Object","entries","map","data","response","post","likedPhotoStatus","error","className","children","photo","src","urls","regular","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["/Users/keigohibino/develop/Go/skyview/skyviewsharing/src/components/PhotoGrid.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./PhotoGrid.css\";\nimport { FaHeart } from \"react-icons/fa\";\nimport axios from \"axios\";\n\nconst PhotoGrid = ({ photos }) => {\n    const [likedPhotos, setLikedPhotos] = useState({});\n\n    const toggleLike = (photoId, url) => {\n        setLikedPhotos((prevLikedPhotos) => ({\n            ...prevLikedPhotos,\n            [photoId]: prevLikedPhotos[photoId]\n                ? { ...prevLikedPhotos[photoId], liked: !prevLikedPhotos[photoId].liked }\n                : { url, liked: true }\n        }));\n    };\n    useEffect(() => {\n        const saveInterval = setInterval(() => {\n            saveLikedPhotosStatus();\n            console.log(likedPhotos)\n        }, 5000); // 5秒ごとに保存\n\n        return () => clearInterval(saveInterval);\n    }, []);\n    const saveLikedPhotosStatus = async () => {\n        const username = \"test\"\n        const photosArray = Object.entries(likedPhotos).map(([photoId, data]) => ({\n            photoId,\n            url: data.url,\n            liked: data.liked,\n        }));\n        // const requestBody = JSON.stringify({\n        //     username,\n        //     likedPhotoStatus: photosArray\n        // })\n        try {\n            const response = await axios.post(\"http://localhost:8080/registerPhoto\", {\n                username,\n                likedPhotoStatus: photosArray\n            })\n        } catch (error) {\n            console.error(\"CannotRegisterLikedPhoto\", error)\n        }\n    }\n    return (\n        <div className=\"photo-grid\">\n            {photos.map((photo) => (\n                <div key={photo.id} className=\"photo-item\">\n                    <img src={photo.urls.regular} />\n                    {/* <img src={photo} /> */}\n                    <div\n                        className={`like-icon ${likedPhotos[photo.id] ? \"liked\" : \"\"}`}\n                        onClick={() => toggleLike(photo.id, photo.urls.regular)}\n                    >\n                        <FaHeart />\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default PhotoGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}