{"ast":null,"code":"var _jsxFileName = \"/app/src/components/LikedPhotosGrid.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./LikedPhotosGrid.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_GO_BASE_URL;\nconst LikedPhotosGrid = ({\n  photos,\n  username\n}) => {\n  _s();\n  const [selectedPhoto, setSelectedPhoto] = useState(null); // ✅ 選択された写真を管理\n\n  // ✅ クリック時に選択した写真をセット（アクションボタン表示用）\n  const handlePhotoClick = photo => {\n    setSelectedPhoto(photo);\n    console.log(photo);\n  };\n\n  // ✅ いいね解除ボタンを押したらバックエンドに削除リクエストを送信\n  const removeLike = async () => {\n    if (!selectedPhoto) return;\n    try {\n      await axios.post(`${API_BASE_URL}/unlikePhoto`, {\n        username,\n        photoId: selectedPhoto.Id\n      }, {\n        withCredentials: true\n      });\n\n      // ✅ 成功したら `selectedPhoto` をリセット（ボタンを非表示）\n      setSelectedPhoto(null);\n    } catch (error) {\n      console.error(\"いいね解除に失敗しました\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photo-grid\",\n    children: photos.map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo-item\",\n      onClick: handlePhotoClick(photo),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo.Url.Regular\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), (selectedPhoto === null || selectedPhoto === void 0 ? void 0 : selectedPhoto.Id) === photo.Id && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unlike-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u3044\\u3044\\u306D\\u3092\\u5916\\u3057\\u307E\\u3059\\u304B\\uFF1F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: removeLike,\n          children: \"\\u3044\\u3044\\u306D\\u3092\\u89E3\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedPhoto(null),\n          children: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this)]\n    }, photo.Id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(LikedPhotosGrid, \"l782GLUJBWXzVdU82NoqbVlGkPE=\");\n_c = LikedPhotosGrid;\nexport default LikedPhotosGrid;\nvar _c;\n$RefreshReg$(_c, \"LikedPhotosGrid\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_GO_BASE_URL","LikedPhotosGrid","photos","username","_s","selectedPhoto","setSelectedPhoto","handlePhotoClick","photo","console","log","removeLike","post","photoId","Id","withCredentials","error","className","children","map","onClick","src","Url","Regular","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/components/LikedPhotosGrid.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./LikedPhotosGrid.css\"\nimport axios from \"axios\";\nconst API_BASE_URL = process.env.REACT_APP_GO_BASE_URL;\nconst LikedPhotosGrid = ({ photos, username }) => {\n    const [selectedPhoto, setSelectedPhoto] = useState(null); // ✅ 選択された写真を管理\n\n    // ✅ クリック時に選択した写真をセット（アクションボタン表示用）\n    const handlePhotoClick = (photo) => {\n        setSelectedPhoto(photo);\n        console.log(photo)\n    };\n\n    // ✅ いいね解除ボタンを押したらバックエンドに削除リクエストを送信\n    const removeLike = async () => {\n        if (!selectedPhoto) return;\n\n        try {\n            await axios.post(`${API_BASE_URL}/unlikePhoto`, {\n                username,\n                photoId: selectedPhoto.Id\n            }, { withCredentials: true });\n\n            // ✅ 成功したら `selectedPhoto` をリセット（ボタンを非表示）\n            setSelectedPhoto(null);\n        } catch (error) {\n            console.error(\"いいね解除に失敗しました\", error);\n        }\n    };\n    return (\n        <div className=\"photo-grid\">\n            {photos.map((photo) => (\n                <div key={photo.Id} className=\"photo-item\" onClick={handlePhotoClick(photo)}>\n                    <img src={photo.Url.Regular} />\n                    {selectedPhoto?.Id === photo.Id && (\n                        <div className=\"unlike-modal\">\n                            <p>いいねを外しますか？</p>\n                            <button onClick={removeLike}>いいねを解除</button>\n                            <button onClick={() => setSelectedPhoto(null)}>キャンセル</button>\n                        </div>\n                    )}\n                </div>\n            ))}\n        </div>\n\n    );\n};\nexport default LikedPhotosGrid;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,uBAAuB;AAC9B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;AACtD,MAAMC,eAAe,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1D;EACA,MAAMc,gBAAgB,GAAIC,KAAK,IAAK;IAChCF,gBAAgB,CAACE,KAAK,CAAC;IACvBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB,CAAC;;EAED;EACA,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAACN,aAAa,EAAE;IAEpB,IAAI;MACA,MAAMX,KAAK,CAACkB,IAAI,CAAC,GAAGf,YAAY,cAAc,EAAE;QAC5CM,QAAQ;QACRU,OAAO,EAAER,aAAa,CAACS;MAC3B,CAAC,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC;;MAE7B;MACAT,gBAAgB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZP,OAAO,CAACO,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACxC;EACJ,CAAC;EACD,oBACIpB,OAAA;IAAKqB,SAAS,EAAC,YAAY;IAAAC,QAAA,EACtBhB,MAAM,CAACiB,GAAG,CAAEX,KAAK,iBACdZ,OAAA;MAAoBqB,SAAS,EAAC,YAAY;MAACG,OAAO,EAAEb,gBAAgB,CAACC,KAAK,CAAE;MAAAU,QAAA,gBACxEtB,OAAA;QAAKyB,GAAG,EAAEb,KAAK,CAACc,GAAG,CAACC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC9B,CAAAtB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAES,EAAE,MAAKN,KAAK,CAACM,EAAE,iBAC3BlB,OAAA;QAAKqB,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzBtB,OAAA;UAAAsB,QAAA,EAAG;QAAU;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjB/B,OAAA;UAAQwB,OAAO,EAAET,UAAW;UAAAO,QAAA,EAAC;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5C/B,OAAA;UAAQwB,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAAC,IAAI,CAAE;UAAAY,QAAA,EAAC;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CACR;IAAA,GARKnB,KAAK,CAACM,EAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASb,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAGd,CAAC;AAACvB,EAAA,CA1CIH,eAAe;AAAA2B,EAAA,GAAf3B,eAAe;AA2CrB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}