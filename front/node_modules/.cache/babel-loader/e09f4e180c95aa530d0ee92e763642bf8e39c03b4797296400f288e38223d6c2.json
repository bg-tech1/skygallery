{"ast":null,"code":"var _jsxFileName = \"/app/src/components/LikedPhotosGrid.js\",\n  _s = $RefreshSig$();\nimport \"./LikedPhotosGrid.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LikedPhotosGrid = ({\n  photos,\n  username\n}) => {\n  _s();\n  const [selectedPhoto, setSelectedPhoto] = useState(null); // ✅ 選択された写真を管理\n\n  // ✅ クリック時に選択した写真をセット（アクションボタン表示用）\n  const handlePhotoClick = photo => {\n    setSelectedPhoto(photo);\n  };\n\n  // ✅ いいね解除ボタンを押したらバックエンドに削除リクエストを送信\n  const removeLike = async () => {\n    if (!selectedPhoto) return;\n    try {\n      await axios.post(`${API_BASE_URL}/unlikePhoto`, {\n        username,\n        photoId: selectedPhoto.Id\n      }, {\n        withCredentials: true\n      });\n\n      // ✅ 成功したら `selectedPhoto` をリセット（ボタンを非表示）\n      setSelectedPhoto(null);\n    } catch (error) {\n      console.error(\"いいね解除に失敗しました\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photo-grid\",\n    children: photos.map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo-item\",\n      onClick: handlePhotoClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo.Url.Regular\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)\n    }, photo.Id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(LikedPhotosGrid, \"l782GLUJBWXzVdU82NoqbVlGkPE=\");\n_c = LikedPhotosGrid;\nexport default LikedPhotosGrid;\nvar _c;\n$RefreshReg$(_c, \"LikedPhotosGrid\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","LikedPhotosGrid","photos","username","_s","selectedPhoto","setSelectedPhoto","useState","handlePhotoClick","photo","removeLike","axios","post","API_BASE_URL","photoId","Id","withCredentials","error","console","className","children","map","onClick","src","Url","Regular","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/components/LikedPhotosGrid.js"],"sourcesContent":["import \"./LikedPhotosGrid.css\"\nconst LikedPhotosGrid = ({ photos, username }) => {\n    const [selectedPhoto, setSelectedPhoto] = useState(null); // ✅ 選択された写真を管理\n\n    // ✅ クリック時に選択した写真をセット（アクションボタン表示用）\n    const handlePhotoClick = (photo) => {\n        setSelectedPhoto(photo);\n    };\n\n    // ✅ いいね解除ボタンを押したらバックエンドに削除リクエストを送信\n    const removeLike = async () => {\n        if (!selectedPhoto) return;\n\n        try {\n            await axios.post(`${API_BASE_URL}/unlikePhoto`, {\n                username,\n                photoId: selectedPhoto.Id\n            }, { withCredentials: true });\n\n            // ✅ 成功したら `selectedPhoto` をリセット（ボタンを非表示）\n            setSelectedPhoto(null);\n        } catch (error) {\n            console.error(\"いいね解除に失敗しました\", error);\n        }\n    };\n    return (\n        <div className=\"photo-grid\">\n            {photos.map((photo) => (\n                <div key={photo.Id} className=\"photo-item\" onClick={handlePhotoClick}>\n                    <img src={photo.Url.Regular} />\n                </div>\n            ))}\n        </div>\n    );\n};\nexport default LikedPhotosGrid;"],"mappings":";;AAAA,OAAO,uBAAuB;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAC9B,MAAMC,eAAe,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1D;EACA,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAChCH,gBAAgB,CAACG,KAAK,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAACL,aAAa,EAAE;IAEpB,IAAI;MACA,MAAMM,KAAK,CAACC,IAAI,CAAC,GAAGC,YAAY,cAAc,EAAE;QAC5CV,QAAQ;QACRW,OAAO,EAAET,aAAa,CAACU;MAC3B,CAAC,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC;;MAE7B;MACAV,gBAAgB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACxC;EACJ,CAAC;EACD,oBACIjB,OAAA;IAAKmB,SAAS,EAAC,YAAY;IAAAC,QAAA,EACtBlB,MAAM,CAACmB,GAAG,CAAEZ,KAAK,iBACdT,OAAA;MAAoBmB,SAAS,EAAC,YAAY;MAACG,OAAO,EAAEd,gBAAiB;MAAAY,QAAA,eACjEpB,OAAA;QAAKuB,GAAG,EAAEd,KAAK,CAACe,GAAG,CAACC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADzBpB,KAAK,CAACM,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEb,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACzB,EAAA,CAjCIH,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AAkCrB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}