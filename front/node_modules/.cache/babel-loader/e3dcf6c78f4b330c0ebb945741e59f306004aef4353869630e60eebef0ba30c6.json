{"ast":null,"code":"var _jsxFileName = \"/app/src/components/PhotoGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./PhotoGrid.css\";\nimport { FaHeart } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { useGetUserInfo } from \"../hooks/useGetUserInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhotoGrid = ({\n  photos\n}) => {\n  _s();\n  const API_BASE_URL = process.env.REACT_APP_GO_BASE_URL;\n  const [likedPhotos, setLikedPhotos] = useState({});\n  const username = useGetUserInfo();\n  const toggleLike = (photoId, url) => {\n    setLikedPhotos(prevLikedPhotos => {\n      var _prevLikedPhotos$phot;\n      const isLiked = ((_prevLikedPhotos$phot = prevLikedPhotos[photoId]) === null || _prevLikedPhotos$phot === void 0 ? void 0 : _prevLikedPhotos$phot.liked) || false;\n      const newState = {\n        ...prevLikedPhotos,\n        [photoId]: {\n          photoId,\n          url,\n          liked: !isLiked\n        }\n      };\n      return newState;\n    });\n  };\n  const deleteUnlikedPhotos = () => {};\n\n  // [備忘録]stateの変更を検知してからuseEffectするようにしたらうまく最新のstateを取得できた\n  useEffect(() => {\n    if (username) {\n      const saveInterval = setInterval(() => {\n        saveLikedPhotosStatus();\n      }, 1000);\n      return () => clearInterval(saveInterval);\n    }\n  }, [likedPhotos, username]);\n  const saveLikedPhotosStatus = async () => {\n    const photosArray = Object.entries(likedPhotos).map(([photoId, data]) => ({\n      photoId,\n      url: data.url,\n      liked: data.liked\n    }));\n    try {\n      const response = await axios.post(`${API_BASE_URL}/registerPhoto`, {\n        username,\n        likedPhotoStatus: photosArray\n      }, {\n        withCredentials: true\n      });\n    } catch (error) {\n      console.error(\"CannotRegisterLikedPhoto\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photo-grid\",\n    children: photos.map(photo => {\n      var _likedPhotos$photo$id;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photo-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: photo.urls.regular\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `like-icon ${(_likedPhotos$photo$id = likedPhotos[photo.id]) !== null && _likedPhotos$photo$id !== void 0 && _likedPhotos$photo$id.liked ? \"liked\" : \"\"}`,\n          onClick: () => toggleLike(photo.id, photo.urls.regular),\n          children: /*#__PURE__*/_jsxDEV(FaHeart, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, photo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(PhotoGrid, \"O99ExpbEWK4a+0ZCQGWm9TUGmWI=\", false, function () {\n  return [useGetUserInfo];\n});\n_c = PhotoGrid;\nexport default PhotoGrid;\nvar _c;\n$RefreshReg$(_c, \"PhotoGrid\");","map":{"version":3,"names":["React","useEffect","useState","FaHeart","axios","useGetUserInfo","jsxDEV","_jsxDEV","PhotoGrid","photos","_s","API_BASE_URL","process","env","REACT_APP_GO_BASE_URL","likedPhotos","setLikedPhotos","username","toggleLike","photoId","url","prevLikedPhotos","_prevLikedPhotos$phot","isLiked","liked","newState","deleteUnlikedPhotos","saveInterval","setInterval","saveLikedPhotosStatus","clearInterval","photosArray","Object","entries","map","data","response","post","likedPhotoStatus","withCredentials","error","console","className","children","photo","_likedPhotos$photo$id","src","urls","regular","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["/app/src/components/PhotoGrid.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./PhotoGrid.css\";\nimport { FaHeart } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { useGetUserInfo } from \"../hooks/useGetUserInfo\"\n\nconst PhotoGrid = ({ photos }) => {\n    const API_BASE_URL = process.env.REACT_APP_GO_BASE_URL;\n\n    const [likedPhotos, setLikedPhotos] = useState({});\n\n    const username = useGetUserInfo();\n\n    const toggleLike = (photoId, url) => {\n        setLikedPhotos((prevLikedPhotos) => {\n            const isLiked = prevLikedPhotos[photoId]?.liked || false;\n            const newState = {\n                ...prevLikedPhotos,\n                [photoId]: { photoId, url, liked: !isLiked }\n            };\n            return newState;\n        });\n    };\n    const deleteUnlikedPhotos = () => {\n\n    };\n\n    // [備忘録]stateの変更を検知してからuseEffectするようにしたらうまく最新のstateを取得できた\n    useEffect(() => {\n        if (username) {\n            const saveInterval = setInterval(() => {\n                saveLikedPhotosStatus();\n            }, 1000);\n            return () => clearInterval(saveInterval);\n        }\n    }, [likedPhotos, username]);\n    const saveLikedPhotosStatus = async () => {\n        const photosArray = Object.entries(likedPhotos).map(([photoId, data]) => ({\n            photoId,\n            url: data.url,\n            liked: data.liked\n        }));\n        try {\n            const response = await axios.post(`${API_BASE_URL}/registerPhoto`, {\n                username,\n                likedPhotoStatus: photosArray\n            }, {\n                withCredentials: true\n            })\n        } catch (error) {\n            console.error(\"CannotRegisterLikedPhoto\", error)\n        }\n    };\n    return (\n        <div className=\"photo-grid\">\n            {photos.map((photo) => (\n                <div key={photo.id} className=\"photo-item\">\n                    <img src={photo.urls.regular} />\n                    <div\n                        className={`like-icon ${likedPhotos[photo.id]?.liked ? \"liked\" : \"\"}`}\n                        onClick={() => toggleLike(photo.id, photo.urls.regular)}\n                    >\n                        <FaHeart />\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default PhotoGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}